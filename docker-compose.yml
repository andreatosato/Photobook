services:
  photobook:
    container_name: photobook
    image: photobook
    build:
      context: .
      dockerfile: Photobook/Dockerfile
    dns:
      - 8.8.8.8
    depends_on:
      - db
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: photobook.db
    hostname: photobook.db
    volumes:
      - sqlserverdata:/var/lib/sqlserver

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"

  grafana:
    container_name: grafana
    image: grafana/grafana:8.3.3
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - prometheus
      - loki

  otel:
    image: otel/opentelemetry-collector-contrib:0.42.0
    container_name: otel
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    #ports:
    #  - "1888:1888"   # pprof extension
    #  - "8888:8888"   # Prometheus metrics exposed by the collector
    #  - "8889:8889"   # Prometheus exporter metrics
    #  - "13133:13133" # health_check extension
    #  - "4317"        # OTLP gRPC receiver
    #  - "55670:55679" # zpages extension
    depends_on:
      - zipkin
      - prometheus
      - loki

volumes:
  sqlserverdata:
    driver: local